"use strict";!function(t){var n={el:null,init:function(){for(var t=this,n=document.querySelectorAll("body .accordion"),i=0;i<n.length;i++)n[i].addEventListener("click",function(n){var i=n.target||e.srcElement;i.className.indexOf("menu-label")>-1&&t._toggleActive(i)})},_toggleActive:function(e){var t=e.nextElementSibling;return-1===e.className.indexOf("active")?(e.classList.add("active"),t.style.height=1.3*this._innerHeight(t)+"px"):(e.classList.remove("active"),t.style.height=0),e},_innerHeight:function(e){height=0;for(var t=e.querySelectorAll("*"),n=0;n<t.length;n++)height+=t[n].clientHeight;return height}};window.$AC=n}(),$AC.init(),function(window){var calc={result:null,elements:{display:document.getElementById("display")},_setDisplay:function(e){this.elements.display.value=e},clear:function(){this._setDisplay("")},del:function(){var e=this.elements.display.value.slice(0,-1);(e.endsWith(".")||e.endsWith(","))&&(e=e.slice(0,-1)),this._setDisplay(e)},equals:function(){this.result=this.elements.display.value;var evalCode=this.result/100+";";this._setDisplay(eval(evalCode))}};window.calc=calc}(window);var _templateObject=_taggedTemplateLiteral(['<ul class="carousel__nav">\n\t\t\t\t',"\n\t\t\t</ul>"],['<ul class="carousel__nav">\n\t\t\t\t',"\n\t\t\t</ul>"]);function _taggedTemplateLiteral(e,t){return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(t)}}))}function Gallery(){var e=this;this.items=document.querySelectorAll("article.gallery-item"),this.bg=document.querySelector(".backimage"),this.init=function(){var t=e;t.items.forEach(function(e){e.addEventListener("click",function(){t.changeImage(this)})}),t.swipeDetection(function(e){if("none"===e)return!1;var n=document.querySelector(".gallery-item.active"),i=void 0;"left"!==e&&"top"!==e||null===(i=n.previousElementSibling)&&(i=t.items[t.items.length-1]),"right"!==e&&"bottom"!==e||null===(i=n.nextElementSibling)&&(i=t.items[0]),i.onclick?i.onclick():i.click&&i.click()}),e.changeImage(e.items[0])},this.changeImage=function(t){var n=e,i=t.querySelector("img").src;n.items.forEach(function(e){e.classList.remove("active")}),t.classList.add("active"),n.bg.classList.remove("fadeout","fadein"),n.bg.classList.add("fadeout"),setTimeout(function(){n.bg.classList.remove("fadeout"),n.bg.classList.add("fadein"),n.bg.style.backgroundImage="url('"+i+"')"},500)},this.swipeDetection=function(t){var n=e.bg,i=void 0,a=void 0,o=void 0,r=void 0,c=void 0,l=void 0,s=t||function(e){};n.addEventListener("touchstart",function(e){var t=e.changedTouches[0];i="none",dist=0,a=t.pageX,o=t.pageY,l=(new Date).getTime(),e.preventDefault()},!1),n.addEventListener("touchmove",function(e){e.preventDefault()},!1),n.addEventListener("touchend",function(e){var t=e.changedTouches[0];r=t.pageX-a,c=t.pageY-o,(new Date).getTime()-l<=300&&(Math.abs(r)>=80&&Math.abs(c)<=100?i=r<0?"left":"right":Math.abs(c)>=80&&Math.abs(r)<=100&&(i=c<0?"up":"down")),s(i),e.preventDefault()},!1)},this.init()}!function(e){window.carousel=void document.querySelectorAll(".carousel").forEach(function(e){new function(e){var t=this,n=e;this.items=n.querySelectorAll(".carousel__items > .carousel__item"),this.navItems=null,this.arrows=null,this.init=function(){t._generateNavigation(),t._generateArrows()},this.goTo=function(e){var i=n.querySelector(".carousel__nav > .carousel__nav-item--active"),a=n.querySelector(".carousel__item--active");i.classList.remove("carousel__nav-item--active"),a.classList.remove("carousel__item--active"),t.navItems[e].classList.add("carousel__nav-item--active"),t.items[e].classList.add("carousel__item--active")},this.arrowNav=function(e){var i=n.querySelector(".carousel__nav > .carousel__nav-item--active"),a=Number.parseInt(i.dataset.index)+e;void 0===t.navItems[a]&&(a=e>0?0:t.navItems.length-1),t.goTo(a)},this._generateNavigation=function(){var e,t,i,a,o=this,r=this.items,c="",l=document.createElement("div");t=r,i=(e=_templateObject)[0],a="carousel__nav-item--active",t.forEach(function(e,t){i+='<li class="carousel__nav-item '+a+'" data-index='+t+"> </li>",a=""}),c=i+=e[1],l.innerHTML=c,n.appendChild(l),this.navItems=n.querySelectorAll(".carousel__nav > li"),this.navItems.forEach(function(e){e.addEventListener("click",function(){o.arrowNav(1),o.goTo(this.dataset.index)})})},this._generateArrows=function(){var e=this,t=document.createElement("div");t.innerHTML='<span class="carousel__arrow carousel__arrow--left fa fa-chevron-left"></span>\n\t\t\t\t<span class="carousel__arrow carousel__arrow--right fa fa-chevron-right"></span>',n.appendChild(t),n.querySelector(".carousel__arrow--left").addEventListener("click",function(){e.arrowNav(-1)}),n.querySelector(".carousel__arrow--right").addEventListener("click",function(){e.arrowNav(1)})}}(e).init()})}();var $G=new Gallery;function windowWidthCount(){document.querySelector(".window-width-label").innerHTML=window.outerWidth}function closeLateralMenu(){document.querySelector("#menu-open").checked=""}function loadLiveExample(e){document.querySelector(".iframe-live").src=e}window.onload=function(){return windowWidthCount()},window.addEventListener("resize",function(){return windowWidthCount()}),function(e){var t=function(e){return document.cookie.split(";").reduce(function(e,t){var n=t.split("=");return e[n[0].trim()]=n[1],e},{})[e]},n=function(){var e=function(){var e=(Date.now()-t("last_visit"))/1e3,n=Math.floor(e/86400);e-=3600*n*24;var i=Math.floor(e/3600);e-=3600*i;var a=Math.floor(e/60);e-=60*a;var o=[];return n&&o.push(n+"d"),(n||i)&&o.push(i+"h"),(n||i||a)&&o.push(a+"m"),o.push(Math.floor(e)+"s"),o.join(" ")}();document.querySelector(".about__last-visit").innerHTML="Your last visit was "+e+" ago."};t("last_visit")>0&&(n(),setInterval(n,1e3)),e.addEventListener("unload",function(){var e,t;e=new Date,t=new Date(e.getTime()+63072e7),document.cookie="last_visit="+e.getTime()+";expires="+t.toUTCString()})}(window),function(e){Array.from(document.querySelectorAll("img[data-src]"),function(e){var t,n,i,a=((t=document.createElement("div")).classList.add("img-loader"),t.innerHTML='<div class="img-loader__icon">\n\t\t<span class="fa fa-refresh fa-spin">\n\t\t</span></div>',t);e.parentElement.insertBefore(a,e),e.setAttribute("src",e.getAttribute("data-src")),e.onload=(n=e,i=a,function(){i.remove(),n.removeAttribute("data-src")})})}(window),function(e){var t="modal__overlay--active";function n(e){e.style.opacity=1,function n(){(e.style.opacity-=.1)<0?(e.style.display="none",e.classList.remove(t)):requestAnimationFrame(n)}()}e.modal=function(e){var i,a=null,o=document.querySelector('[data-modal-id="'+e+'"]');return document.querySelector('.modal__overlay > [data-modal-id="'+e+'"]')&&(a=document.querySelector('.modal__overlay > [data-modal-id="'+e+'"]').parentElement),null===a&&(i=document.querySelector("body"),(a=document.createElement("section")).style.display="none",a.classList.add("modal__overlay"),a.classList.add("modal__overlay--active"),o.style.display="block",a.appendChild(o),i.appendChild(a),Array.from(a.querySelectorAll("[data-close]"),function(e){e.addEventListener("click",function(){n(a)})})),{fadeIn:function(){var e;(e=a).style.opacity=0,e.style.display="block",function n(){var i=parseFloat(e.style.opacity);(i+=.1)>1||(e.style.opacity=i,e.classList.add(t),requestAnimationFrame(n))}()},fadeOut:function(){n(a)}}},Array.from(document.querySelectorAll("[data-modal-open]"),function(t){t.addEventListener("click",function(){var t=this.dataset.modalOpen;e.modal(t).fadeIn()})})}(window),window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)},function(e){var t=e,n=document.querySelector(".content-holder"),i=document.querySelector(".navbar").getBoundingClientRect().height+10;t.getPosY=function(e){return(e=e.getBoundingClientRect()).top+n.scrollTop-i},t.scrollToElement=function(i,a,o){if(a||(a=1e3),i.nodeName||(i=document.querySelector(i)),!i)throw"Element inexistent!";var r=n.scrollTop,c=t.getPosY(i)-r,l=void 0;e.requestAnimFrame(function t(i){l||(l=i);var s,u=i-l,d=Math.min(u/a,1);d=(s=d)<.5?4*s*s*s:(s-1)*(2*s-2)*(2*s-2)+1,n.scrollTo(0,r+c*d),u<a?e.requestAnimFrame(t):o&&o()})},e.scrollToElement=t.scrollToElement}(window),function(e){Array.from(document.querySelectorAll(".tab__title")).forEach(function(e){e.addEventListener("click",function(){var e,t,n,i,a;e=this.dataset.tabId,t=Array.from(document.querySelectorAll(".tab__title--selected")),n=Array.from(document.querySelectorAll("[data-tab-id='"+e+"']")),i=document.querySelector(".tab__content--selected"),a=document.querySelector("[data-content-id='"+e+"']"),t.forEach(function(e){return e.classList.remove("tab__title--selected")}),n.forEach(function(e){return e.classList.add("tab__title--selected")}),i.classList.remove("tab__content--selected"),a.classList.add("tab__content--selected")})}),Array.from(document.querySelectorAll(".tab__container > .tab__title")).forEach(function(t){t.addEventListener("click",function(){e.scrollToElement(this,1e3)})})}(window),function(e){function t(e){var t=new XMLHttpRequest;t.onload=function(){return n=e,i=t.response,document.getElementById("triviaNumber").innerHTML=n,void(document.getElementById("triviaAnswer").innerHTML=i);var n,i},t.open("GET","http://numbersapi.com/"+e),t.setRequestHeader("Accept","application/json"),t.send()}function n(){t(Math.floor(200*Math.random()))}n(),e.newTrivia=n}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
