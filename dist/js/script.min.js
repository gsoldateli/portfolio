function Gallery(){this.items=document.querySelectorAll("article.gallery-item"),this.bg=document.querySelector(".backimage"),this.init=function(){for(var e=this,t=0;t<e.items.length;t++)e.items[t].addEventListener("click",function(){e.changeImage(this)});e.swipeDetection(function(t){if("none"===t)return!1;var n,i=document.querySelector(".gallery-item.active");"left"!==t&&"top"!==t||null===(n=i.previousElementSibling)&&(n=e.items[e.items.length-1]),"right"!==t&&"bottom"!==t||null===(n=i.nextElementSibling)&&(n=e.items[0]),n.onclick?n.onclick():n.click&&n.click()}),this.changeImage(this.items[0])},this.changeImage=function(e){for(var t=this,n=e.querySelector("img").src,i=0;i<t.items.length;i++)t.items[i].classList.remove("active");e.classList.add("active"),t.bg.classList.remove("fadeout","fadein"),t.bg.classList.add("fadeout"),setTimeout(function(){t.bg.classList.remove("fadeout"),t.bg.classList.add("fadein"),t.bg.style.backgroundImage="url('"+n+"')"},500)},this.swipeDetection=function(e){var t,n,i,a,o,l,r=this.bg,s=e||function(e){};r.addEventListener("touchstart",function(e){var a=e.changedTouches[0];t="none",dist=0,n=a.pageX,i=a.pageY,l=(new Date).getTime(),e.preventDefault()},!1),r.addEventListener("touchmove",function(e){e.preventDefault()},!1),r.addEventListener("touchend",function(e){var r=e.changedTouches[0];a=r.pageX-n,o=r.pageY-i,(new Date).getTime()-l<=300&&(Math.abs(a)>=80&&Math.abs(o)<=100?t=a<0?"left":"right":Math.abs(o)>=80&&Math.abs(a)<=100&&(t=o<0?"up":"down")),s(t),e.preventDefault()},!1)},this.init()}!function(t){var n={el:null,init:function(){for(var t=this,n=document.querySelectorAll("body .accordion"),i=0;i<n.length;i++)n[i].addEventListener("click",function(n){var i=n.target||e.srcElement;i.className.indexOf("menu-label")>-1&&t._toggleActive(i)})},_toggleActive:function(e){var t=e.nextElementSibling;return-1===e.className.indexOf("active")?(e.classList.add("active"),t.style.height=1.3*this._innerHeight(t)+"px"):(e.classList.remove("active"),t.style.height=0),e},_innerHeight:function(e){height=0;for(var t=e.querySelectorAll("*"),n=0;n<t.length;n++)height+=t[n].clientHeight;return height}};window.$AC=n}(),$AC.init(),function(window){var calc={result:null,elements:{display:document.getElementById("display")},_setDisplay:function(e){display.value=e},clear:function(){this._setDisplay("")},del:function(){var e=this.elements.display.value.slice(0,-1);"."!==e[e.length-1]&&","!==e[e.length-1]||(e=e.slice(0,-1)),this._setDisplay(e)},equals:function(){this.result=this.elements.display.value;var evalCode=this.result/100+";";this._setDisplay(eval(evalCode))}};window.calc=calc}(window),function(e){function t(e){var t=e;this.items=t.querySelectorAll(".carousel__items > .carousel__item"),this.navItems=null,this.arrows=null,this.init=function(){this._generateNavigation(),this._generateArrows()},this.goTo=function(e){var n=t.querySelector(".carousel__nav > .carousel__nav-item--active"),i=t.querySelector(".carousel__item--active");n.classList.remove("carousel__nav-item--active"),i.classList.remove("carousel__item--active"),this.navItems[e].classList.add("carousel__nav-item--active"),this.items[e].classList.add("carousel__item--active")},this.arrowNav=function(e){var n=t.querySelector(".carousel__nav > .carousel__nav-item--active"),i=Number.parseInt(n.dataset.index)+e;void 0===this.navItems[i]&&(i=e>0?0:this.navItems.length-1),this.goTo(i)},this._generateNavigation=function(){var e=this,n=this.items,i="",a="carousel__nav-item--active",o=document.createElement("div");i+='<ul class="carousel__nav">';for(var l=0;l<n.length;l++)i+='<li class="carousel__nav-item '+a+'" data-index='+l+"> </li>",a="";i+="</ul>",o.innerHTML=i,t.appendChild(o),this.navItems=t.querySelectorAll(".carousel__nav > li");for(l=0;l<this.navItems.length;l++)this.navItems[l].addEventListener("click",function(){e.arrowNav(1),e.goTo(this.dataset.index)})},this._generateArrows=function(){var e=this,n=document.createElement("div");n.innerHTML='<span class="carousel__arrow carousel__arrow--left fa fa-chevron-left"></span><span class="carousel__arrow carousel__arrow--right fa fa-chevron-right"></span>',t.appendChild(n),t.querySelector(".carousel__arrow--left").addEventListener("click",function(){e.arrowNav(-1)}),t.querySelector(".carousel__arrow--right").addEventListener("click",function(){e.arrowNav(1)})}}window.carousel=function(e){for(var n=document.querySelectorAll(".carousel"),i=0;i<n.length;i++){var a=new t(n[i]);a.init()}return a}()}();var $G=new Gallery;function windowWidthCount(){document.querySelector(".window-width-label").innerHTML=window.outerWidth}function closeLateralMenu(){document.querySelector("#menu-open").checked=""}function loadLiveExample(e){document.querySelector(".iframe-live").src=e}window.onload=function(){windowWidthCount()},window.addEventListener("resize",function(){windowWidthCount()}),function(e){$images=document.querySelectorAll("img[data-src]");for(var t=0;t<$images.length;t++){var n=a();$images[t].parentElement.insertBefore(n,$images[t]),$images[t].setAttribute("src",$images[t].getAttribute("data-src")),$images[t].onload=i($images[t],n)}function i(e,t){return function(){t.remove(),e.removeAttribute("data-src")}}function a(){var e=document.createElement("div");return e.classList.add("img-loader"),e.innerHTML='<div class="img-loader__icon"><span class="fa fa-refresh fa-spin"></span></div>',e}}(window),function(e){var t="modal__overlay--active";function n(e){e.style.opacity=1,function n(){(e.style.opacity-=.1)<0?(e.style.display="none",e.classList.remove(t)):requestAnimationFrame(n)}()}e.modal=function(e){var i,a=null,o=document.querySelector('[data-modal-id="'+e+'"]');return document.querySelector('.modal__overlay > [data-modal-id="'+e+'"]')&&(a=document.querySelector('.modal__overlay > [data-modal-id="'+e+'"]').parentElement),null===a&&(i=document.querySelector("body"),(a=document.createElement("section")).style.display="none",a.classList.add("modal__overlay"),a.classList.add("modal__overlay--active"),o.style.display="block",a.appendChild(o),i.appendChild(a),function(){for(var e=a.querySelectorAll("[data-close]"),t=0;t<e.length;t++)e[t].addEventListener("click",function(){n(a)})}()),{fadeIn:function(){var e;console.log(a),(e=a).style.opacity=0,e.style.display="block",function n(){var i=parseFloat(e.style.opacity);(i+=.1)>1||(e.style.opacity=i,e.classList.add(t),requestAnimationFrame(n))}()},fadeOut:function(){console.log(a),n(a)}}};for(var i=document.querySelectorAll("[data-modal-open]"),a=0;a<i.length;a++)i[a].addEventListener("click",function(){var t=this.dataset.modalOpen;e.modal(t).fadeIn()})}(window),window.requestAnimFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||function(e){window.setTimeout(e,1e3/60)},function(e){var t=this,n=document.querySelector(".content-holder"),i=document.querySelector(".navbar").getBoundingClientRect().height+10;t.getPosY=function(e){return(e=e.getBoundingClientRect()).top+n.scrollTop-i},t.scrollToElement=function(i,a,o){if(a||(a=1e3),i.nodeName||(i=document.querySelector(i)),!i)throw"Element inexistent!";var l,r=n.scrollTop,s=t.getPosY(i)-r;e.requestAnimFrame(function t(i){l||(l=i);var c,u=i-l,d=Math.min(u/a,1);d=(c=d)<.5?4*c*c*c:(c-1)*(2*c-2)*(2*c-2)+1,n.scrollTo(0,r+s*d),u<a?e.requestAnimFrame(t):o&&o()})},e.scrollToElement=t.scrollToElement}(window),function(e){var t=document.querySelectorAll(".tab__title");function n(e){for(var t=document.querySelectorAll(".tab__title--selected"),n=document.querySelector(".tab__content--selected"),i=document.querySelector("[data-content-id='"+e+"']"),a=document.querySelectorAll("[data-tab-id='"+e+"']"),o=0;o<t.length;o++)t[o].classList.remove("tab__title--selected");for(o=0;o<a.length;o++)a[o].classList.add("tab__title--selected");n.classList.remove("tab__content--selected"),i.classList.add("tab__content--selected")}for(var i=0;i<t.length;i++)t[i].addEventListener("click",function(){n(this.dataset.tabId)});var a=document.querySelectorAll(".tab__container > .tab__title");for(i=0;i<a.length;i++)a[i].addEventListener("click",function(){e.scrollToElement(this,1e3)})}(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
